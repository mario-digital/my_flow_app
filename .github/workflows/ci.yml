name: Full Stack CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  backend:
    name: Backend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('my_flow_api/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install dependencies
        run: |
          cd my_flow_api
          uv sync

      - name: Run linting (ruff)
        run: |
          cd my_flow_api
          uv run ruff check .

      - name: Run type checking (mypy)
        run: |
          cd my_flow_api
          uv run mypy src/

      - name: Run tests (pytest)
        run: |
          cd my_flow_api
          PYTHONPATH=. uv run pytest --cov=src --cov-report=term --cov-report=xml

      - name: Upload backend coverage
        uses: codecov/codecov-action@v4
        with:
          files: ./my_flow_api/coverage.xml
          flags: backend
          fail_ci_if_error: false

  frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            my_flow_client/node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('my_flow_client/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: |
          cd my_flow_client
          bun install

      - name: Run linting (ESLint)
        run: |
          cd my_flow_client
          bun run lint

      - name: Run type checking (TypeScript)
        run: |
          cd my_flow_client
          bun run typecheck

      - name: Run tests (Vitest)
        run: |
          cd my_flow_client
          bun run test -- --coverage

      - name: Build verification
        run: |
          cd my_flow_client
          bun run build

      - name: Upload frontend coverage
        uses: codecov/codecov-action@v4
        with:
          files: ./my_flow_client/coverage/coverage-final.json
          flags: frontend
          fail_ci_if_error: false

  status-check:
    name: All Tests Passed
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    if: always()

    steps:
      - name: Check all jobs succeeded
        run: |
          backend_result="${{ needs.backend.result }}"
          frontend_result="${{ needs.frontend.result }}"

          echo "Backend result: ${backend_result}"
          echo "Frontend result: ${frontend_result}"

          failed_jobs=()
          if [[ "${backend_result}" != "success" ]]; then
            failed_jobs+=("Backend Tests")
          fi
          if [[ "${frontend_result}" != "success" ]]; then
            failed_jobs+=("Frontend Tests")
          fi

          if [[ ${#failed_jobs[@]} -gt 0 ]]; then
            echo "::error::Failed job(s): ${failed_jobs[*]}"
            echo "❌ Some tests failed"
            exit 1
          fi

          echo "✅ All tests passed!"
