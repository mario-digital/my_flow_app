#!/usr/bin/env sh

echo "üîç Running pre-commit checks..."

# Run lint-staged for file-level checks
bunx lint-staged || { echo "‚ùå lint-staged failed"; exit 1; }

# Detect what's being committed
STAGED_FILES=$(git diff --cached --name-only)
FRONTEND_STAGED="false"
BACKEND_STAGED="false"

if echo "$STAGED_FILES" | grep "^my_flow_client/" >/dev/null 2>&1; then
  FRONTEND_STAGED="true"
fi

if echo "$STAGED_FILES" | grep "^my_flow_api/" >/dev/null 2>&1; then
  BACKEND_STAGED="true"
fi

# Frontend checks (only if frontend files staged AND directory exists)
if [ "$FRONTEND_STAGED" = "true" ] && [ -d "my_flow_client" ]; then
  echo "üßπ Linting frontend..."
  bun --cwd my_flow_client run lint || { echo "‚ùå Frontend lint failed"; exit 1; }

  echo "üìù Type checking frontend..."
  bun --cwd my_flow_client run typecheck || { echo "‚ùå Frontend type check failed"; exit 1; }
elif [ "$FRONTEND_STAGED" = "true" ]; then
  echo "‚ö†Ô∏è Frontend files staged but my_flow_client directory not found (worktree?)."
  echo "   Skipping frontend checks - ensure they pass in main repo."
fi

# Backend checks (only if backend files staged AND directory exists)
if [ "$BACKEND_STAGED" = "true" ] && [ -d "my_flow_api" ]; then
  echo "üêç Type checking backend..."
  PYTHONPATH=./my_flow_api uv run --project my_flow_api mypy my_flow_api/src/ || { echo "‚ùå Backend type check failed"; exit 1; }
elif [ "$BACKEND_STAGED" = "true" ]; then
  echo "‚ö†Ô∏è Backend files staged but my_flow_api directory not found (worktree?)."
  echo "   Skipping backend checks - ensure they pass in main repo."
fi

echo "‚úÖ Pre-commit checks passed!"
